{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/feed.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","hidelink","followe_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c9ca270c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = \"json\"\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n    if (csrftoken) {\r\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    }\r\n\r\n    xhr.onload = function () {\r\n        if (xhr.status === 403) {\r\n            const detail = xhr.response.detail\r\n            if (detail === \"Authentication credentials were not provided.\") {\r\n                if (window.location.href.indexOf(\"login\") === -1) {\r\n                    window.location.href = \"/login?showLoginRequired=true\"\r\n                }\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n        callback({ \"message\": \"The request was an error\" }, 400)\r\n    }\r\n    xhr.send(jsonData)\r\n}","import { backendLookup } from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet })\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = { id: tweetId, action: action }\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\n\r\nimport { apiTweetAction } from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status)\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}","import React from 'react'\r\nimport { apiTweetCreate } from './lookup'\r\n\r\n\r\nexport function TweetCreate(props) {\r\n    const textAreaRef = React.createRef()\r\n    const { didTweet } = props\r\n    const handleBackendUpdate = (response, status) => {\r\n        if (status === 201) {\r\n            didTweet(response)\r\n        } else {\r\n            console.log(response)\r\n            alert(\"An error occured please try again\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n        <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n        </form>\r\n    </div>\r\n}","import React from 'react'\r\n\r\n\r\nexport function UserLink(props) {\r\n    const { username } = props\r\n    const handleUserLink = (event) => {\r\n        window.location.href = `/profiles/${username}`\r\n\r\n    }\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const { user, includeFullName, hideLink } = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null\r\n    return <React.Fragment>\r\n        {nameDisplay}\r\n        {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture(props) {\r\n    const { user, hideLink } = props\r\n    const userIdSpan = <span className='mx-1  px-3 py-2 round-circle bg-dark text-white'>\r\n        {user.username[0]}\r\n    </span>\r\n    return hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\r\n}","import React from 'react'\r\nimport numeral from 'numeral'\r\n\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport { UserDisplay, UserPicture } from './components'\r\nimport { apiProfileDetail, apiProfileFollowToggle } from './lookup'\r\n\r\nimport { DisplayCount } from './utils'\r\n\r\nfunction ProfileBadge(props) {\r\n    const { user, didFollowToggle, profileLoading } = props\r\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\r\n    currentVerb = profileLoading ? \"Loading....\" : currentVerb\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n    return user ? <div>\r\n        <UserPicture user={user} hidelink />\r\n        <p><UserDisplay user={user} includeFullName hidelink /></p>\r\n        <p><DisplayCount>{user.followe_count}</DisplayCount> {user.followe_count === 1 ? \"follower\" : \"followers\"}</p>\r\n        <p><DisplayCount>{user.following_count}</DisplayCount>following</p>\r\n        <p>{user.location}</p>\r\n        <p>{user.bio}</p>\r\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n    </div> : null\r\n\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n    const { username } = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(false)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiProfileDetail(username, handleBackendLookup)\r\n            setDidLookup(true)\r\n\r\n        }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n            if (status === 200) {\r\n                setProfile(response)\r\n\r\n            }\r\n\r\n            setProfileLoading(false)\r\n        })\r\n        setProfileLoading(true)\r\n    }\r\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\r\n}","import { backendLookup } from '../lookup'\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\r\n}\r\n\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = { action: `${action && action}`.toLowerCase() }\r\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\r\n}","import React, { useState } from 'react'\r\n\r\nimport { ActionBtn } from './buttons'\r\n\r\nimport {\r\n    UserDisplay,\r\n    UserPicture\r\n} from '../profiles'\r\n\r\nexport function ParentTweet(props) {\r\n    const { tweet } = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n}\r\nexport function Tweet(props) {\r\n    const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n    }\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n            setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n            if (didRetweet) {\r\n                didRetweet(newActionTweet)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return <div className={className}>\r\n        {isRetweet === true && <div className='mb-2'>\r\n            <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n        </div>}\r\n        <div className='d-flex'>\r\n\r\n            <div className=''>\r\n                <UserPicture user={tweet.user} />\r\n            </div>\r\n            <div className='col-11'>\r\n                <div>\r\n\r\n                    <p>\r\n                        <UserDisplay includeFullName user={tweet.user} />\r\n                    </p>\r\n                    <p>{tweet.content}</p>\r\n\r\n                    <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n                </div>\r\n                <div className='btn btn-group px-0'>\r\n                    {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"like\", display: \"Likes\" }} />\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"unlike\", display: \"Unlike\" }} />\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"retweet\", display: \"Retweet\" }} />\r\n                    </React.Fragment>\r\n                    }\r\n                    {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { apiTweetFeed } from './lookup'\r\n\r\nimport { Tweet } from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results)\r\n                    setTweetsDidSet(true)\r\n                }\r\n            }\r\n            apiTweetFeed(handleTweetListLookup)\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets)\r\n                    setTweets(newTweets)\r\n                }\r\n            }\r\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index) => {\r\n        return <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className='my-5 py-5 border bg-white text-dark'\r\n            key={`${index}-{item.id}`} />\r\n    })}\r\n        {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { apiTweetList } from './lookup'\r\n\r\nimport { Tweet } from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results)\r\n                    setTweetsDidSet(true)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            apiTweetList(props.username, handleTweetListLookup)\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets)\r\n                    setTweets(newTweets)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index) => {\r\n        return <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className='my-5 py-5 border bg-white text-dark'\r\n            key={`${index}-{item.id}`} />\r\n    })}\r\n        {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { TweetCreate } from './create'\r\nimport { Tweet } from './detail'\r\nimport { apiTweetDetail } from './lookup'\r\nimport { FeedList } from './feed'\r\nimport { TweetsList } from './list'\r\n\r\nexport function FeedComponent(props) {\r\n\r\n\r\n\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport function TweetDetailComponent(props) {\r\n    const { tweetId } = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response)\r\n        } else {\r\n            alert(\"There was an error finding your tweet.\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [tweetId, didLookup, setDidLookup])\r\n\r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { TweetsComponent } from './tweets'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ProfileBadgeComponent } from './profiles'\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n  ReactDOM.render(\n    e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\")\nif (tweetFeedEl) {\n  ReactDOM.render(\n    e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container);\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n  ReactDOM.render(\n    e(ProfileBadgeComponent, container.dataset),\n    container);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}